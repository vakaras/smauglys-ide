<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="extensions/css-language-features/client\dist\node/cssClient" source-language="en" datatype="plaintext"><body>
    <trans-unit id="cssserver.name">
      <source xml:lang="en">CSS Language Server</source>
    </trans-unit>
    <trans-unit id="folding.end">
      <source xml:lang="en">Folding Region End</source>
    </trans-unit>
    <trans-unit id="folding.start">
      <source xml:lang="en">Folding Region Start</source>
    </trans-unit>
</body></file>
  <file original="extensions/css-language-features/package" source-language="en" datatype="plaintext"><body>
    <trans-unit id="css.colorDecorators.enable.deprecationMessage">
      <source xml:lang="en">The setting `css.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.</source>
    </trans-unit>
    <trans-unit id="css.completion.completePropertyWithSemicolon.desc">
      <source xml:lang="en">Insert semicolon at end of line when completing CSS properties.</source>
    </trans-unit>
    <trans-unit id="css.completion.triggerPropertyValueCompletion.desc">
      <source xml:lang="en">By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.</source>
    </trans-unit>
    <trans-unit id="css.customData.desc">
      <source xml:lang="en">A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-css-languageservice/blob/master/docs/customData.md).

VS Code loads custom data on startup to enhance its CSS support for the custom CSS properties, at directives, pseudo classes and pseudo elements you specify in the JSON files.

The file paths are relative to workspace and only workspace folder settings are considered.</source>
    </trans-unit>
    <trans-unit id="css.hover.documentation">
      <source xml:lang="en">Show tag and attribute documentation in CSS hovers.</source>
    </trans-unit>
    <trans-unit id="css.hover.references">
      <source xml:lang="en">Show references to MDN in CSS hovers.</source>
    </trans-unit>
    <trans-unit id="css.lint.argumentsInColorFunction.desc">
      <source xml:lang="en">Invalid number of parameters.</source>
    </trans-unit>
    <trans-unit id="css.lint.boxModel.desc">
      <source xml:lang="en">Do not use `width` or `height` when using `padding` or `border`.</source>
    </trans-unit>
    <trans-unit id="css.lint.compatibleVendorPrefixes.desc">
      <source xml:lang="en">When using a vendor-specific prefix make sure to also include all other vendor-specific properties.</source>
    </trans-unit>
    <trans-unit id="css.lint.duplicateProperties.desc">
      <source xml:lang="en">Do not use duplicate style definitions.</source>
    </trans-unit>
    <trans-unit id="css.lint.emptyRules.desc">
      <source xml:lang="en">Do not use empty rulesets.</source>
    </trans-unit>
    <trans-unit id="css.lint.float.desc">
      <source xml:lang="en">Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.</source>
    </trans-unit>
    <trans-unit id="css.lint.fontFaceProperties.desc">
      <source xml:lang="en">`@font-face` rule must define `src` and `font-family` properties.</source>
    </trans-unit>
    <trans-unit id="css.lint.hexColorLength.desc">
      <source xml:lang="en">Hex colors must consist of three or six hex numbers.</source>
    </trans-unit>
    <trans-unit id="css.lint.idSelector.desc">
      <source xml:lang="en">Selectors should not contain IDs because these rules are too tightly coupled with the HTML.</source>
    </trans-unit>
    <trans-unit id="css.lint.ieHack.desc">
      <source xml:lang="en">IE hacks are only necessary when supporting IE7 and older.</source>
    </trans-unit>
    <trans-unit id="css.lint.importStatement.desc">
      <source xml:lang="en">Import statements do not load in parallel.</source>
    </trans-unit>
    <trans-unit id="css.lint.important.desc">
      <source xml:lang="en">Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.</source>
    </trans-unit>
    <trans-unit id="css.lint.propertyIgnoredDueToDisplay.desc">
      <source xml:lang="en">Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.</source>
    </trans-unit>
    <trans-unit id="css.lint.universalSelector.desc">
      <source xml:lang="en">The universal selector (`*`) is known to be slow.</source>
    </trans-unit>
    <trans-unit id="css.lint.unknownAtRules.desc">
      <source xml:lang="en">Unknown at-rule.</source>
    </trans-unit>
    <trans-unit id="css.lint.unknownProperties.desc">
      <source xml:lang="en">Unknown property.</source>
    </trans-unit>
    <trans-unit id="css.lint.unknownVendorSpecificProperties.desc">
      <source xml:lang="en">Unknown vendor specific property.</source>
    </trans-unit>
    <trans-unit id="css.lint.validProperties.desc">
      <source xml:lang="en">A list of properties that are not validated against the `unknownProperties` rule.</source>
    </trans-unit>
    <trans-unit id="css.lint.vendorPrefix.desc">
      <source xml:lang="en">When using a vendor-specific prefix, also include the standard property.</source>
    </trans-unit>
    <trans-unit id="css.lint.zeroUnits.desc">
      <source xml:lang="en">No unit for zero needed.</source>
    </trans-unit>
    <trans-unit id="css.title">
      <source xml:lang="en">CSS</source>
    </trans-unit>
    <trans-unit id="css.trace.server.desc">
      <source xml:lang="en">Traces the communication between VS Code and the CSS language server.</source>
    </trans-unit>
    <trans-unit id="css.validate.desc">
      <source xml:lang="en">Enables or disables all validations.</source>
    </trans-unit>
    <trans-unit id="css.validate.title">
      <source xml:lang="en">Controls CSS validation and problem severities.</source>
    </trans-unit>
    <trans-unit id="description">
      <source xml:lang="en">Provides rich language support for CSS, LESS and SCSS files.</source>
    </trans-unit>
    <trans-unit id="displayName">
      <source xml:lang="en">CSS Language Features</source>
    </trans-unit>
    <trans-unit id="less.colorDecorators.enable.deprecationMessage">
      <source xml:lang="en">The setting `less.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.</source>
    </trans-unit>
    <trans-unit id="less.completion.completePropertyWithSemicolon.desc">
      <source xml:lang="en">Insert semicolon at end of line when completing CSS properties.</source>
    </trans-unit>
    <trans-unit id="less.completion.triggerPropertyValueCompletion.desc">
      <source xml:lang="en">By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.</source>
    </trans-unit>
    <trans-unit id="less.hover.documentation">
      <source xml:lang="en">Show tag and attribute documentation in LESS hovers.</source>
    </trans-unit>
    <trans-unit id="less.hover.references">
      <source xml:lang="en">Show references to MDN in LESS hovers.</source>
    </trans-unit>
    <trans-unit id="less.lint.argumentsInColorFunction.desc">
      <source xml:lang="en">Invalid number of parameters.</source>
    </trans-unit>
    <trans-unit id="less.lint.boxModel.desc">
      <source xml:lang="en">Do not use `width` or `height` when using `padding` or `border`.</source>
    </trans-unit>
    <trans-unit id="less.lint.compatibleVendorPrefixes.desc">
      <source xml:lang="en">When using a vendor-specific prefix make sure to also include all other vendor-specific properties.</source>
    </trans-unit>
    <trans-unit id="less.lint.duplicateProperties.desc">
      <source xml:lang="en">Do not use duplicate style definitions.</source>
    </trans-unit>
    <trans-unit id="less.lint.emptyRules.desc">
      <source xml:lang="en">Do not use empty rulesets.</source>
    </trans-unit>
    <trans-unit id="less.lint.float.desc">
      <source xml:lang="en">Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.</source>
    </trans-unit>
    <trans-unit id="less.lint.fontFaceProperties.desc">
      <source xml:lang="en">`@font-face` rule must define `src` and `font-family` properties.</source>
    </trans-unit>
    <trans-unit id="less.lint.hexColorLength.desc">
      <source xml:lang="en">Hex colors must consist of three or six hex numbers.</source>
    </trans-unit>
    <trans-unit id="less.lint.idSelector.desc">
      <source xml:lang="en">Selectors should not contain IDs because these rules are too tightly coupled with the HTML.</source>
    </trans-unit>
    <trans-unit id="less.lint.ieHack.desc">
      <source xml:lang="en">IE hacks are only necessary when supporting IE7 and older.</source>
    </trans-unit>
    <trans-unit id="less.lint.importStatement.desc">
      <source xml:lang="en">Import statements do not load in parallel.</source>
    </trans-unit>
    <trans-unit id="less.lint.important.desc">
      <source xml:lang="en">Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.</source>
    </trans-unit>
    <trans-unit id="less.lint.propertyIgnoredDueToDisplay.desc">
      <source xml:lang="en">Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.</source>
    </trans-unit>
    <trans-unit id="less.lint.universalSelector.desc">
      <source xml:lang="en">The universal selector (`*`) is known to be slow.</source>
    </trans-unit>
    <trans-unit id="less.lint.unknownAtRules.desc">
      <source xml:lang="en">Unknown at-rule.</source>
    </trans-unit>
    <trans-unit id="less.lint.unknownProperties.desc">
      <source xml:lang="en">Unknown property.</source>
    </trans-unit>
    <trans-unit id="less.lint.unknownVendorSpecificProperties.desc">
      <source xml:lang="en">Unknown vendor specific property.</source>
    </trans-unit>
    <trans-unit id="less.lint.validProperties.desc">
      <source xml:lang="en">A list of properties that are not validated against the `unknownProperties` rule.</source>
    </trans-unit>
    <trans-unit id="less.lint.vendorPrefix.desc">
      <source xml:lang="en">When using a vendor-specific prefix, also include the standard property.</source>
    </trans-unit>
    <trans-unit id="less.lint.zeroUnits.desc">
      <source xml:lang="en">No unit for zero needed.</source>
    </trans-unit>
    <trans-unit id="less.title">
      <source xml:lang="en">LESS</source>
    </trans-unit>
    <trans-unit id="less.validate.desc">
      <source xml:lang="en">Enables or disables all validations.</source>
    </trans-unit>
    <trans-unit id="less.validate.title">
      <source xml:lang="en">Controls LESS validation and problem severities.</source>
    </trans-unit>
    <trans-unit id="scss.colorDecorators.enable.deprecationMessage">
      <source xml:lang="en">The setting `scss.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.</source>
    </trans-unit>
    <trans-unit id="scss.completion.completePropertyWithSemicolon.desc">
      <source xml:lang="en">Insert semicolon at end of line when completing CSS properties.</source>
    </trans-unit>
    <trans-unit id="scss.completion.triggerPropertyValueCompletion.desc">
      <source xml:lang="en">By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.</source>
    </trans-unit>
    <trans-unit id="scss.hover.documentation">
      <source xml:lang="en">Show tag and attribute documentation in SCSS hovers.</source>
    </trans-unit>
    <trans-unit id="scss.hover.references">
      <source xml:lang="en">Show references to MDN in SCSS hovers.</source>
    </trans-unit>
    <trans-unit id="scss.lint.argumentsInColorFunction.desc">
      <source xml:lang="en">Invalid number of parameters.</source>
    </trans-unit>
    <trans-unit id="scss.lint.boxModel.desc">
      <source xml:lang="en">Do not use `width` or `height` when using `padding` or `border`.</source>
    </trans-unit>
    <trans-unit id="scss.lint.compatibleVendorPrefixes.desc">
      <source xml:lang="en">When using a vendor-specific prefix make sure to also include all other vendor-specific properties.</source>
    </trans-unit>
    <trans-unit id="scss.lint.duplicateProperties.desc">
      <source xml:lang="en">Do not use duplicate style definitions.</source>
    </trans-unit>
    <trans-unit id="scss.lint.emptyRules.desc">
      <source xml:lang="en">Do not use empty rulesets.</source>
    </trans-unit>
    <trans-unit id="scss.lint.float.desc">
      <source xml:lang="en">Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.</source>
    </trans-unit>
    <trans-unit id="scss.lint.fontFaceProperties.desc">
      <source xml:lang="en">`@font-face` rule must define `src` and `font-family` properties.</source>
    </trans-unit>
    <trans-unit id="scss.lint.hexColorLength.desc">
      <source xml:lang="en">Hex colors must consist of three or six hex numbers.</source>
    </trans-unit>
    <trans-unit id="scss.lint.idSelector.desc">
      <source xml:lang="en">Selectors should not contain IDs because these rules are too tightly coupled with the HTML.</source>
    </trans-unit>
    <trans-unit id="scss.lint.ieHack.desc">
      <source xml:lang="en">IE hacks are only necessary when supporting IE7 and older.</source>
    </trans-unit>
    <trans-unit id="scss.lint.importStatement.desc">
      <source xml:lang="en">Import statements do not load in parallel.</source>
    </trans-unit>
    <trans-unit id="scss.lint.important.desc">
      <source xml:lang="en">Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.</source>
    </trans-unit>
    <trans-unit id="scss.lint.propertyIgnoredDueToDisplay.desc">
      <source xml:lang="en">Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.</source>
    </trans-unit>
    <trans-unit id="scss.lint.universalSelector.desc">
      <source xml:lang="en">The universal selector (`*`) is known to be slow.</source>
    </trans-unit>
    <trans-unit id="scss.lint.unknownAtRules.desc">
      <source xml:lang="en">Unknown at-rule.</source>
    </trans-unit>
    <trans-unit id="scss.lint.unknownProperties.desc">
      <source xml:lang="en">Unknown property.</source>
    </trans-unit>
    <trans-unit id="scss.lint.unknownVendorSpecificProperties.desc">
      <source xml:lang="en">Unknown vendor specific property.</source>
    </trans-unit>
    <trans-unit id="scss.lint.validProperties.desc">
      <source xml:lang="en">A list of properties that are not validated against the `unknownProperties` rule.</source>
    </trans-unit>
    <trans-unit id="scss.lint.vendorPrefix.desc">
      <source xml:lang="en">When using a vendor-specific prefix, also include the standard property.</source>
    </trans-unit>
    <trans-unit id="scss.lint.zeroUnits.desc">
      <source xml:lang="en">No unit for zero needed.</source>
    </trans-unit>
    <trans-unit id="scss.title">
      <source xml:lang="en">SCSS (Sass)</source>
    </trans-unit>
    <trans-unit id="scss.validate.desc">
      <source xml:lang="en">Enables or disables all validations.</source>
    </trans-unit>
    <trans-unit id="scss.validate.title">
      <source xml:lang="en">Controls SCSS validation and problem severities.</source>
    </trans-unit>
</body></file>
</xliff>